// Code generated by SQLBoiler 4.19.1 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import "testing"

// TestToOne tests cannot be run in parallel
// or deadlocks can occur.
func TestToOne(t *testing.T) {
	t.Run("AccessLogToAccountUsingUser", testAccessLogToOneAccountUsingUser)
	t.Run("AttachtmentToPostUsingRelated", testAttachtmentToOnePostUsingRelated)
	t.Run("AttachtmentToSiteUsingSite", testAttachtmentToOneSiteUsingSite)
	t.Run("CommentToPostUsingPost", testCommentToOnePostUsingPost)
	t.Run("PostToSiteUsingSite", testPostToOneSiteUsingSite)
	t.Run("SiteRoleToAccountUsingAccount", testSiteRoleToOneAccountUsingAccount)
	t.Run("SiteRoleToSiteUsingSite", testSiteRoleToOneSiteUsingSite)
}

// TestOneToOne tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOne(t *testing.T) {}

// TestToMany tests cannot be run in parallel
// or deadlocks can occur.
func TestToMany(t *testing.T) {
	t.Run("AccountToUserAccessLogs", testAccountToManyUserAccessLogs)
	t.Run("AccountToSiteRoles", testAccountToManySiteRoles)
	t.Run("PostToRelatedAttachtments", testPostToManyRelatedAttachtments)
	t.Run("PostToComments", testPostToManyComments)
	t.Run("SiteToAttachtments", testSiteToManyAttachtments)
	t.Run("SiteToPosts", testSiteToManyPosts)
	t.Run("SiteToSiteRoles", testSiteToManySiteRoles)
}

// TestToOneSet tests cannot be run in parallel
// or deadlocks can occur.
func TestToOneSet(t *testing.T) {
	t.Run("AccessLogToAccountUsingUserAccessLogs", testAccessLogToOneSetOpAccountUsingUser)
	t.Run("AttachtmentToPostUsingRelatedAttachtments", testAttachtmentToOneSetOpPostUsingRelated)
	t.Run("AttachtmentToSiteUsingAttachtments", testAttachtmentToOneSetOpSiteUsingSite)
	t.Run("CommentToPostUsingComments", testCommentToOneSetOpPostUsingPost)
	t.Run("PostToSiteUsingPosts", testPostToOneSetOpSiteUsingSite)
	t.Run("SiteRoleToAccountUsingSiteRoles", testSiteRoleToOneSetOpAccountUsingAccount)
	t.Run("SiteRoleToSiteUsingSiteRoles", testSiteRoleToOneSetOpSiteUsingSite)
}

// TestToOneRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestToOneRemove(t *testing.T) {
	t.Run("AccessLogToAccountUsingUserAccessLogs", testAccessLogToOneRemoveOpAccountUsingUser)
}

// TestOneToOneSet tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOneSet(t *testing.T) {}

// TestOneToOneRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOneRemove(t *testing.T) {}

// TestToManyAdd tests cannot be run in parallel
// or deadlocks can occur.
func TestToManyAdd(t *testing.T) {
	t.Run("AccountToUserAccessLogs", testAccountToManyAddOpUserAccessLogs)
	t.Run("AccountToSiteRoles", testAccountToManyAddOpSiteRoles)
	t.Run("PostToRelatedAttachtments", testPostToManyAddOpRelatedAttachtments)
	t.Run("PostToComments", testPostToManyAddOpComments)
	t.Run("SiteToAttachtments", testSiteToManyAddOpAttachtments)
	t.Run("SiteToPosts", testSiteToManyAddOpPosts)
	t.Run("SiteToSiteRoles", testSiteToManyAddOpSiteRoles)
}

// TestToManySet tests cannot be run in parallel
// or deadlocks can occur.
func TestToManySet(t *testing.T) {
	t.Run("AccountToUserAccessLogs", testAccountToManySetOpUserAccessLogs)
}

// TestToManyRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestToManyRemove(t *testing.T) {
	t.Run("AccountToUserAccessLogs", testAccountToManyRemoveOpUserAccessLogs)
}
