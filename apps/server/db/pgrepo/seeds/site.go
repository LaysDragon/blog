// Code generated by SQLBoiler boilingseed-0.1.0 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package seeds

import (
	"context"
	"fmt"
	"math"
	"strconv"
	"time"

	models "github.com/LaysDragon/blog/apps/server/db/pgrepo/models"
	"github.com/volatiletech/null/v8"
	"github.com/volatiletech/randomize"
	"github.com/volatiletech/sqlboiler/v4/boil"
	"github.com/volatiletech/sqlboiler/v4/queries"
)

var (
	siteColumnsWithDefault = []string{"id", "created_at", "updated_at", "deleted_at", "name"}
	siteDBTypes            = map[string]string{`ID`: `integer`, `CreatedAt`: `timestamp with time zone`, `UpdatedAt`: `timestamp with time zone`, `DeletedAt`: `timestamp with time zone`, `Name`: `character varying`}
)

// defaultRandomSite creates a random model.Site
// Used when RandomSite is not set in the Seeder
func defaultRandomSite() (*models.Site, error) {
	o := &models.Site{}
	seed := randomize.NewSeed()
	err := randomize.Struct(seed, o, siteDBTypes, true, siteColumnsWithDefault...)

	return o, err
}

func (s Seeder) seedSites(ctx context.Context, exec boil.ContextExecutor) error {
	fmt.Println("Adding Sites")
	SitesToAdd := s.MinSitesToSeed

	randomFunc := s.RandomSite
	if randomFunc == nil {
		randomFunc = defaultRandomSite
	}

	for i := 0; i < SitesToAdd; i++ {
		// create model
		o, err := randomFunc()
		if err != nil {
			return fmt.Errorf("unable to get Random Site: %w", err)
		}

		// insert model
		if err := o.Insert(ctx, exec, boil.Infer()); err != nil {
			return fmt.Errorf("unable to insert Site: %w", err)
		}
	}

	// run afterAdd
	if s.AfterSitesAdded != nil {
		if err := s.AfterSitesAdded(ctx); err != nil {
			return fmt.Errorf("error running AfterSitesAdded: %w", err)
		}
	}

	fmt.Println("Finished adding Sites")
	return nil
}

// These packages are needed in SOME models
// This is to prevent errors in those that do not need it
var _ = math.E
var _ = queries.Query{}

// This is to force strconv to be used. Without it, it causes an error because strconv is imported by ALL the drivers
var _ = strconv.IntSize

// site is here to prevent erros due to driver "BasedOnType" imports.
type site struct {
	ID        int
	CreatedAt time.Time
	UpdatedAt time.Time
	DeletedAt null.Time
	Name      null.String
}
